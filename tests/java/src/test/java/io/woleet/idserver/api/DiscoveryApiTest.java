/*
 * Woleet.ID Server
 * This is Woleet.ID Server API documentation.
 *
 * OpenAPI spec version: 1.0.4
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.woleet.idserver.api;

import io.woleet.idserver.ApiException;
import io.woleet.idserver.api.model.APIError;
import io.woleet.idserver.api.model.KeyDiscoArray;
import java.util.UUID;
import io.woleet.idserver.api.model.UserDisco;
import io.woleet.idserver.api.model.UserDiscoArray;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiscoveryApi
 */
@Ignore
public class DiscoveryApiTest {

    private final DiscoveryApi api = new DiscoveryApi();

    
    /**
     * Get the user associated to a public key.
     *
     * Use this endpoint to get the user owning a given public key. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void discoverUserByPubKeyTest() throws ApiException {
        String pubKey = null;
        UserDisco response = api.discoverUserByPubKey(pubKey);

        // TODO: test validations
    }
    
    /**
     * Get all public keys of a user.
     *
     * Use this endpoint to get all public keys owned by a given user. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void discoverUserKeysTest() throws ApiException {
        UUID userId = null;
        KeyDiscoArray response = api.discoverUserKeys(userId);

        // TODO: test validations
    }
    
    /**
     * Get all users matching a search string.
     *
     * Use this endpoint to get all users whose &#x60;email&#x60;, &#x60;username&#x60;, &#x60;x500CommonName&#x60;, &#x60;x500Organization&#x60; or &#x60;x500OrganizationalUnit&#x60; contains the search string. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void discoverUsersTest() throws ApiException {
        String search = null;
        UserDiscoArray response = api.discoverUsers(search);

        // TODO: test validations
    }
    
}
