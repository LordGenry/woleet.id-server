package io.woleet.idserver.api;

import io.woleet.idserver.ApiException;
import io.woleet.idsever.api.model.IdentityResult;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for IdentityApi
 */
@Ignore
public class IdentityApiTest {

    private final IdentityApi api = new IdentityApi();

    /**
     * Prove and get the identity of a user.
     * <p>
     * Use this endpoint to prove that Woleet.ID Server manages a given key and to get the associated user&#39;s identity. &lt;br&gt;This endpoint signs some random data using the public key provided in the &#x60;pubKey&#x60; parameter and return the produced signature along with the associated user&#39;s identity. &lt;br&gt;The random data is built by concatenating the &#x60;leftData&#x60; parameter (provided by the client) and some random data (returned in the &#x60;rightData&#x60; field) generated by the server. &lt;br&gt;The caller must verify that the produced signature is valid for the public key (this validate the ownership of the private part of the key by Woleet.ID Server). &lt;br&gt;The caller can optionally read the TLS certificate securing this endpoint to get the certified identity of the hoster of Woleet.ID Server. &lt;br&gt;This endpoint is not protected. It is recommended to expose it publicly.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIdentityTest() throws ApiException {
        String pubKey = null;
        String leftData = null;
        IdentityResult response = api.getIdentity(pubKey, leftData);

        // TODO: test validations
    }
}
